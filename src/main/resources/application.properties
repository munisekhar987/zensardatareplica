# CDC Consumer Application Configuration

# Server Configuration
server.port=${SERVER_PORT:9095}
spring.application.name=${SPRING_APP_NAME:CDC-DataReplicationAPP}

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:bootstrap.transapp-rollback-poc.us-east4.managedkafka.pr-transapp-dev-use4-01.cloud.goog:9092}
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID:multi-cdc-consumer}
spring.kafka.consumer.auto-offset-reset=${KAFKA_OFFSET_RESET:earliest}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Google Cloud Managed Kafka Security Configuration
spring.kafka.properties.security.protocol=${KAFKA_SECURITY_PROTOCOL:SASL_SSL}
spring.kafka.properties.sasl.mechanism=${KAFKA_SASL_MECHANISM:OAUTHBEARER}
spring.kafka.properties.sasl.login.callback.handler.class=${KAFKA_SASL_LOGIN_CALLBACK_HANDLER_CLASS:com.google.cloud.hosted.kafka.auth.GcpLoginCallbackHandler}
spring.kafka.properties.sasl.jaas.config=${KAFKA_SASL_JAAS_CONFIG:org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;}

# CDC Topic Configuration
cdc.kafka.topics=${CDC_TOPICS:mytestp.dlv.delivery_building}
cdc.topic.table-mappings=${CDC_TOPIC_TABLE_MAPPINGS:{'mytestp.dlv.delivery_building': 'DELIVERY_BUILDING'}}
cdc.table.primary-keys=${CDC_TABLE_PRIMARY_KEYS:{'DELIVERY_BUILDING': 'ID'}}
cdc.tables.allow-duplicates=${CDC_ALLOW_DUPLICATES:DELIVERYCONFIRM}
cdc.handle.duplicates=${CDC_DUPLICATE_STRATEGY:merge}

# Oracle Database Connection Configuration
oracle.db.url=${ORACLE_URL:jdbc:oracle:thin:@10.64.45.111:1521/devint}
oracle.db.username=${ORACLE_USER:dlv}
oracle.db.password=${ORACLE_PASSWORD:dlv}
oracle.db.schema=${ORACLE_SCHEMA:DLV}

# PostgreSQL Source Configuration
postgres.db.url=${POSTGRES_URL:jdbc:postgresql://10.52.3.6:5432/psqldev}
postgres.db.username=${POSTGRES_USER:psqldev}
postgres.db.password=${POSTGRES_PASSWORD:We1c0me123}
postgres.db.schema=${POSTGRES_SCHEMA:dlv}

# PostgreSQL UDT Configuration
postgres.udt.tables=${POSTGRES_UDT_TABLES:HANDOFF_BATCHROUTE:BATCH_ID}
postgres.udt.type-mapping=${POSTGRES_UDT_TYPE_MAPPING:{'handoff_routing_route_no':'HANDOFF_ROUTING_ROUTE_NO', 'handoff_roadnet_route_no':'HANDOFF_ROADNET_ROUTE_NO'}}
postgres.udt.column-mapping=${POSTGRES_UDT_COLUMN_MAPPING:{'HANDOFF_BATCHROUTE.ROUTING_ROUTE_NO':'handoff_routing_route_no', 'HANDOFF_BATCHROUTE.ROADNET_ROUTE_NO':'handoff_roadnet_route_no'}}

# Logging Configuration
logging.level.com.zensar.data.replication=INFO
logging.level.com.zensar.data.replication.consumer=DEBUG
logging.level.com.zensar.data.replication.service=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %cyan(%-40logger{40}) : %msg%n