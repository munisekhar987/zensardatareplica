# CDC Consumer Application Configuration - Local Environment

# Server Configuration
server.port=9095
spring.application.name=CDC-DataReplicationAPP

# CRITICAL: Keep application running continuously
spring.main.keep-alive=true
spring.main.web-application-type=servlet

# Local Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=multi-cdc-consumer-local
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Enhanced Kafka Consumer Configuration for Continuous Running
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-commit-interval=1000
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.listener.idle-event-interval=30000

# Local Kafka - No Security Configuration (Plain)
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.session-timeout-ms=30000
spring.kafka.consumer.heartbeat-interval-ms=3000
spring.kafka.consumer.fetch-min-size=1
spring.kafka.consumer.fetch-max-wait=500

# CDC Topic Configuration - Simple Test Tables
cdc.kafka.topics=local.pubic.customers,local.pubic.order_logs
cdc.topic.table-mappings={'local.pubic.customers': 'CUSTOMERS', 'local.pubic.order_logs': 'ORDER_LOGS'}
cdc.table.primary-keys={'CUSTOMERS': 'CUSTOMER_ID'}
cdc.tables.allow-duplicates=ORDER_LOGS
cdc.handle.duplicates=merge

# Local Oracle Database Connection Configuration (using SYSTEM schema)
oracle.db.url=jdbc:oracle:thin:@localhost:1521/XE
oracle.db.username=system
oracle.db.password=Oracle123
oracle.db.schema=SYSTEM

# Local PostgreSQL Source Configuration (using public schema)
postgres.db.url=jdbc:postgresql://localhost:5432/psqldev
postgres.db.username=psqldev
postgres.db.password=We1c0me123
postgres.db.schema=public

# PostgreSQL UDT Configuration - Empty for simple testing
postgres.udt.tables=${POSTGRES_UDT_TABLES:HANDOFF_BATCHROUTE:BATCH_ID}
postgres.udt.type-mapping=${POSTGRES_UDT_TYPE_MAPPING:{'handoff_routing_route_no':'HANDOFF_ROUTING_ROUTE_NO', 'handoff_roadnet_route_no':'HANDOFF_ROADNET_ROUTE_NO'}}
postgres.udt.column-mapping=${POSTGRES_UDT_COLUMN_MAPPING:{'HANDOFF_BATCHROUTE.ROUTING_ROUTE_NO':'handoff_routing_route_no', 'HANDOFF_BATCHROUTE.ROADNET_ROUTE_NO':'handoff_roadnet_route_no'}}

# Expose health and metrics endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Logging Configuration
logging.level.com.zensar.data.replication=INFO
logging.level.com.zensar.data.replication.consumer=DEBUG
logging.level.com.zensar.data.replication.service=DEBUG
logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %cyan(%-40logger{40}) : %msg%n